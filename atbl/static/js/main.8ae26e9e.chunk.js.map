{"version":3,"sources":["timelineItems.js","components/TimelineRange.js","ThreeApp.js","index.js"],"names":["timelineItems","id","start","end","name","high","Date","low","key","timelineItemsData","curDate","parse","setMonth","getMonth","getTotalRange","ThreeApp","init","canvas","document","querySelector","getContext","w","documentElement","clientWidth","h","clientHeight","width","height","scene","THREE","window","renderer","setSize","camera","position","z","add","raf","requestAnimationFrame","render","obj","rotation","y","x","this","initLoader","gsap","registerPlugin","ScrollTrigger","initTL","GLTFLoader","load","gltf","scale","undefined","error","console","rgbeLoader","RGBELoader","setDataType","pmremGenerator","PMREMGenerator","texture","toneMappingExposure","envMap","fromEquirectangular","environment","dispose","tl","timeline","create","animation","trigger","scrub","onUpdate","self","Math","PI","progress","sin","Lottie","loadAnimation","container","getElementById","loop","autoplay","path","onload"],"mappings":"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","file":"static/js/main.8ae26e9e.chunk.js","sourcesContent":["const timelineItems = [\n  {\n    id: 1,\n    start: \"2021-01-14\",\n    end: \"2021-01-22\",\n    name: \"Recruit translators\",\n  },\n  {\n    id: 2,\n    start: \"2021-01-17\",\n    end: \"2021-01-31\",\n    name: \"Create lesson plan 1\",\n  },\n  {\n    id: 3,\n    start: \"2021-02-05\",\n    end: \"2021-02-13\",\n    name: \"Translate phrases for lesson 1\",\n  },\n  {\n    id: 4,\n    start: \"2021-02-07\",\n    end: \"2021-03-08\",\n    name: \"Create dark mode design\",\n  },\n  {\n    id: 5,\n    start: \"2021-02-14\",\n    end: \"2021-02-22\",\n    name: \"Recruit copyeditors\",\n  },\n  {\n    id: 6,\n    start: \"2021-02-18\",\n    end: \"2021-02-24\",\n    name: \"Proofread translations for lesson 1\",\n  },\n  {\n    id: 7,\n    start: \"2021-02-20\",\n    end: \"2021-02-22\",\n    name: \"Finalize logo\",\n  },\n  {\n    id: 8,\n    start: \"2021-02-21\",\n    end: \"2021-03-22\",\n    name: \"Implement dark mode\",\n  },\n  {\n    id: 9,\n    start: \"2021-02-21\",\n    end: \"2021-02-28\",\n    name: \"Finalize lesson plan 1\",\n  },\n  {\n    id: 10,\n    start: \"2021-02-23\",\n    end: \"2021-02-23\",\n    name: \"Approve logo\",\n  },\n  {\n    id: 11,\n    start: \"2021-03-03\",\n    end: \"2021-03-29\",\n    name: \"Create lesson plan 2\",\n  },\n  {\n    id: 12,\n    start: \"2021-03-30\",\n    end: \"2021-04-08\",\n    name: \"Translate phrases for lesson 2\",\n  },\n  {\n    id: 13,\n    start: \"2021-04-01\",\n    end: \"2021-04-04\",\n    name: \"Debug mobile notification error\",\n  },\n  {\n    id: 14,\n    start: \"2021-04-05\",\n    end: \"2021-04-06\",\n    name: \"Test debugged mobile notifications\",\n  },\n  {\n    id: 15,\n    start: \"2021-04-16\",\n    end: \"2021-04-30\",\n    name: \"Beta test\",\n  },\n  {\n    id: 16,\n    start: \"2021-05-01\",\n    end: \"2021-05-01\",\n    name: \"Launch day\",\n  },\n];\n\nexport default timelineItems;\n","import React from 'react';\nimport timelineItemsData from \"../timelineItems\";\n\nconst range = getTotalRange();\n// console.log(range);\n//\nfunction getTotalRange(){\n    let high = new Date();\n    let low = new Date();\n    for (let key in timelineItemsData) {\n        const curDate = new Date(Date.parse(timelineItemsData[key].end));\n        if(curDate>high){\n            high = curDate;\n        }\n        if(curDate<low){\n            low = curDate;\n        }\n    }\n    // adding a month on either end for padding\n    return {\n        lowest: new Date(low.setMonth(low.getMonth()-1)),   \n        highest: new Date(high.setMonth(high.getMonth()+1))   \n    }\n}\n\nconst TimelineRange = () => (\n    <div className=\"timeline-range\">\n        <span className=\"timelineStart\">\n        <p>{range.lowest.toDateString()}</p>\n        </span>\n        <span>Jan</span><span>Feb</span><span>Mar</span><span>Apr</span><span>May</span>\n        <span className=\"timelineEnd\">\n        <p>{range.highest.toDateString()}</p>\n        </span>\n    </div>\n\n)\n\nexport default TimelineRange;","\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { PMREMGenerator } from 'three/src/extras/PMREMGenerator';\n//\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\n//\nimport Lottie from 'lottie-web';\n\n\n\nlet ThreeApp =  {\n \n    init(){\n    \n        const context = document.querySelector(\"#three\").getContext(\"webgl2\");\n        const canvas = context.canvas;\n        let w = document.documentElement.clientWidth;\n        let h = document.documentElement.clientHeight;\n        canvas.width = w;\n        canvas.height = h;\n        \n        const scene = new THREE.Scene(); \n        window.scene = scene;\n        const renderer = new THREE.WebGLRenderer({canvas});\n        renderer.setSize(w, h);\n        const camera = new THREE.PerspectiveCamera(48, w / h , 1, 10000)\n        camera.position.z = 300;\n        scene.add(camera);\n        \n       \n        function raf() {\n            // console.log(\"render\");\n            requestAnimationFrame(raf);\n            renderer.render(scene, camera);\n            if(scene.obj){\n                scene.obj.rotation.y= 2.2;\n                scene.obj.rotation.x=-1.4;\n            }\n          }\n\n        raf();\n        this.initLoader(scene, renderer);\n\n        gsap.registerPlugin(ScrollTrigger);\n        this.initTL(); \n    },\n\n    initLoader(scene, renderer) {\n\n        // Load in 3D Model\n        const loader = new GLTFLoader();\n        \n        \n        loader.load( './component.glb', function ( gltf ) {\n            scene.obj = gltf.scene;\n            gltf.scene.scale.x=4;\n            gltf.scene.scale.y=4;\n            gltf.scene.scale.z=4;\n            \n            \n            scene.add( scene.obj );\n            \n        }, undefined, function ( error ) {\n\t        console.error( error );\n        } )\n\n        // Load in HDR image to light the scene\n\n        const rgbeLoader = new RGBELoader();\n        rgbeLoader.setDataType( THREE.UnsignedByteType );\n        const pmremGenerator = new PMREMGenerator(renderer);\n\n        rgbeLoader.load( './clouds.hdr', function ( texture ) {\n        \n            \n            renderer.toneMappingExposure = 3.36;\n            const envMap = pmremGenerator.fromEquirectangular( texture ).texture;\n            \n                scene.environment = envMap;\n\t\t\t\ttexture.dispose();\n\t\t\t\tpmremGenerator.dispose();\n            \n        }, undefined, function ( error ) {\n\t        console.error( error );\n        } );\n\n    },\n\n    initTL(){\n        // Create trigger for timeline control\n        const tl = gsap.timeline();\n       \n\n        \n        ScrollTrigger.create({\n            animation:tl,\n            trigger:'#sections',\n            start: 'top top',\n            end: 'bottom bottom',\n            scrub:1.8,\n            onUpdate: (self)=>{\n                // console.log(self, self.progress);\n                if(window.scene.obj){\n                    window.scene.obj.rotation.z = 2*Math.PI* self.progress;\n                    window.scene.obj.position.z = -800*Math.sin(Math.PI*self.progress);\n                }\n            }\n\n        })\n        // Load in icon animation\n        Lottie.loadAnimation({\n            container: document.getElementById(\"down-arrow\"),\n            renderer: 'svg',\n            loop: true,\n            autoplay: true,\n            path:\"scrolldown.json\"\n          });\n    }\n    \n    \n}\n\n\n  \n  \n\nexport default ThreeApp;","import React from \"react\";\nimport {render} from \"react-dom\";\nimport Timeline from './components/Timeline';\nimport ThreeApp from './ThreeApp';\nimport \"./index.css\";\n\nconst App = () => (\n  <div>\n    {/* <Header /> */}\n    {/* <h2>In-Page Copy {\"\\u2728\"}</h2> */}\n    {/* <h3>{timelineItems.length} timeline items to render</h3> */}\n    {/* <h3>{Moment.now()} is the time</h3> */}\n    <Timeline />\n    {/* <Footer /> */}\n\n  </div>\n);\n\n// render(<App />, document.getElementById(\"root\"));\n\n\n\nwindow.onload = () => {\n  ThreeApp.init();\n  // console.log(ThreeApp);\n}\n\n\n\n/*\n{\n    id: 2,\n    start: \"2021-01-17\",\n    end: \"2021-01-31\",\n    name: \"Create lesson plan 1\",\n  },\n*/"],"sourceRoot":""}